{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/config.ts"],"sourcesContent":["import 'dotenv/config';\n\nconst {\n  APS_CLIENT_ID,\n  APS_CLIENT_SECRET,\n  APS_BUCKET: rawBucket,\n  NEXT_PUBLIC_PORT,\n} = process.env;\n\nif (!APS_CLIENT_ID || !APS_CLIENT_SECRET) {\n  console.error('MISSING APS CREDENTIALS');\n  process.exit(1);\n}\n\nexport const PORT = NEXT_PUBLIC_PORT || '3000';\nexport const APS_BUCKET = rawBucket || `${APS_CLIENT_ID.toLowerCase()}-projects`;\nexport const APS_CLIENT = {\n  id: APS_CLIENT_ID,\n  secret: APS_CLIENT_SECRET,\n};"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,EACJ,aAAa,EACb,iBAAiB,EACjB,YAAY,SAAS,EACrB,gBAAgB,EACjB,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,iBAAiB,CAAC,mBAAmB;IACxC,QAAQ,KAAK,CAAC;IACd,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,OAAO,oBAAoB;AACjC,MAAM,aAAa,aAAa,GAAG,cAAc,WAAW,GAAG,SAAS,CAAC;AACzE,MAAM,aAAa;IACxB,IAAI;IACJ,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/services/auth.ts"],"sourcesContent":["import 'dotenv/config'\nimport { AuthenticationClient, Scopes } from '@aps_sdk/authentication'\nimport { APS_CLIENT } from '../config'\nconst authClient = new AuthenticationClient();\n\n\nexport async function getViewerToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [Scopes.ViewablesRead]\n  );\n  return creds.access_token;\n}\n\nexport async function getInternalToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [\n      Scopes.DataRead,\n      Scopes.DataWrite,\n      Scopes.DataCreate,\n      Scopes.BucketRead,\n      Scopes.BucketCreate\n    ]\n  );\n  return creds.access_token;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;AACA,MAAM,aAAa,IAAI,sMAAA,CAAA,uBAAoB;AAGpC,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QAAC,+KAAA,CAAA,SAAM,CAAC,aAAa;KAAC;IAExB,OAAO,MAAM,YAAY;AAC3B;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QACE,+KAAA,CAAA,SAAM,CAAC,QAAQ;QACf,+KAAA,CAAA,SAAM,CAAC,SAAS;QAChB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,YAAY;KACpB;IAEH,OAAO,MAAM,YAAY;AAC3B","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/services/aps.ts"],"sourcesContent":["import 'dotenv/config'\nimport { APS_BUCKET } from '../config'\nimport { ModelDerivativeClient,View,OutputType } from '@aps_sdk/model-derivative'\nimport {\n  OssClient,\n  Region,\n  PolicyKey\n} from '@aps_sdk/oss'\nimport { getInternalToken } from './auth'\n\n\nconst derivativeClient = new ModelDerivativeClient();\nconst ossClient = new OssClient();\n\nexport async function ensureBucketExists(bucketKey: string){\n    const token = await getInternalToken();\n    try{\n        await ossClient.getBucketDetails(bucketKey, {accessToken: token});\n    } catch(err:any) {\n        if(err.axiosError?.response?.status === 404){\n            await ossClient.createBucket(\n                Region.Us,\n                {bucketKey, policyKey: PolicyKey.Temporary},\n                {accessToken: token}\n            )\n        } else {\n            throw err\n        }\n    }\n}\n\nexport async function listObjects(){\n    await ensureBucketExists(APS_BUCKET);\n    const token = await getInternalToken();\n    let resp = await ossClient.getObjects(APS_BUCKET, {limit: 64, accessToken:token});\n    let items = resp.items;\n    while (resp.next){\n        const startAt = new URL(resp.next).searchParams.get(\"startAt\")!\n        resp = await ossClient.getObjects(APS_BUCKET, {limit: 64, accessToken:token});\n        items = items.concat(resp.items);\n    }\n    return items;\n}\n\nexport async function uploadObject(objectName: string, filePath: string) {\n    await ensureBucketExists(APS_BUCKET)\n    const token = await getInternalToken()\n    return await ossClient.uploadObject(APS_BUCKET, objectName, filePath, { accessToken: token })\n    }\n\nexport async function translateObject(urn: string, rootFilename?:string){\n    const token = await getInternalToken();\n    const job = await derivativeClient.startJob(\n        {\n          input: { urn, compressedUrn: !!rootFilename, rootFilename },\n          output: {\n            formats: [{ type: OutputType.Svf2, views: [View._2d, View._3d] }]\n          }\n        },\n        { accessToken: token }\n      )\n      return job.result\n}\n\nexport async function getManifest(urn: string) {\n    const token = await getInternalToken()\n    try {\n      return await derivativeClient.getManifest(urn, { accessToken: token })\n    } catch (err: any) {\n      if (err.axiosError?.response?.status === 404) return null\n      throw err\n    }\n  }\n  \n  export function urnify(id: string) {\n    return Buffer.from(id).toString('base64').replace(/=/g, '')\n  }"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;;;;;;AAGA,MAAM,mBAAmB,IAAI,4MAAA,CAAA,wBAAqB;AAClD,MAAM,YAAY,IAAI,gLAAA,CAAA,YAAS;AAExB,eAAe,mBAAmB,SAAiB;IACtD,MAAM,QAAQ,MAAM,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD;IACnC,IAAG;QACC,MAAM,UAAU,gBAAgB,CAAC,WAAW;YAAC,aAAa;QAAK;IACnE,EAAE,OAAM,KAAS;QACb,IAAG,IAAI,UAAU,EAAE,UAAU,WAAW,KAAI;YACxC,MAAM,UAAU,YAAY,CACxB,oKAAA,CAAA,SAAM,CAAC,EAAE,EACT;gBAAC;gBAAW,WAAW,uKAAA,CAAA,YAAS,CAAC,SAAS;YAAA,GAC1C;gBAAC,aAAa;YAAK;QAE3B,OAAO;YACH,MAAM;QACV;IACJ;AACJ;AAEO,eAAe;IAClB,MAAM,mBAAmB,wGAAA,CAAA,aAAU;IACnC,MAAM,QAAQ,MAAM,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD;IACnC,IAAI,OAAO,MAAM,UAAU,UAAU,CAAC,wGAAA,CAAA,aAAU,EAAE;QAAC,OAAO;QAAI,aAAY;IAAK;IAC/E,IAAI,QAAQ,KAAK,KAAK;IACtB,MAAO,KAAK,IAAI,CAAC;QACb,MAAM,UAAU,IAAI,IAAI,KAAK,IAAI,EAAE,YAAY,CAAC,GAAG,CAAC;QACpD,OAAO,MAAM,UAAU,UAAU,CAAC,wGAAA,CAAA,aAAU,EAAE;YAAC,OAAO;YAAI,aAAY;QAAK;QAC3E,QAAQ,MAAM,MAAM,CAAC,KAAK,KAAK;IACnC;IACA,OAAO;AACX;AAEO,eAAe,aAAa,UAAkB,EAAE,QAAgB;IACnE,MAAM,mBAAmB,wGAAA,CAAA,aAAU;IACnC,MAAM,QAAQ,MAAM,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD;IACnC,OAAO,MAAM,UAAU,YAAY,CAAC,wGAAA,CAAA,aAAU,EAAE,YAAY,UAAU;QAAE,aAAa;IAAM;AAC3F;AAEG,eAAe,gBAAgB,GAAW,EAAE,YAAoB;IACnE,MAAM,QAAQ,MAAM,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD;IACnC,MAAM,MAAM,MAAM,iBAAiB,QAAQ,CACvC;QACE,OAAO;YAAE;YAAK,eAAe,CAAC,CAAC;YAAc;QAAa;QAC1D,QAAQ;YACN,SAAS;gBAAC;oBAAE,MAAM,wLAAA,CAAA,aAAU,CAAC,IAAI;oBAAE,OAAO;wBAAC,kLAAA,CAAA,OAAI,CAAC,GAAG;wBAAE,kLAAA,CAAA,OAAI,CAAC,GAAG;qBAAC;gBAAC;aAAE;QACnE;IACF,GACA;QAAE,aAAa;IAAM;IAEvB,OAAO,IAAI,MAAM;AACvB;AAEO,eAAe,YAAY,GAAW;IACzC,MAAM,QAAQ,MAAM,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD;IACnC,IAAI;QACF,OAAO,MAAM,iBAAiB,WAAW,CAAC,KAAK;YAAE,aAAa;QAAM;IACtE,EAAE,OAAO,KAAU;QACjB,IAAI,IAAI,UAAU,EAAE,UAAU,WAAW,KAAK,OAAO;QACrD,MAAM;IACR;AACF;AAEO,SAAS,OAAO,EAAU;IAC/B,OAAO,OAAO,IAAI,CAAC,IAAI,QAAQ,CAAC,UAAU,OAAO,CAAC,MAAM;AAC1D","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/app/api/models/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport fs from 'fs/promises'\nimport os from 'os'\nimport path from 'path'\nimport { listObjects,uploadObject,translateObject,urnify } from '@/services/aps'\n\nexport async function GET() {\n    const items = await listObjects()\n    return NextResponse.json(\n      items.map(o => ({ name: o.objectKey, urn: urnify(o.objectId!) }))\n    )\n}\n\nexport async function POST(request: NextRequest) {\n    const form = await request.formData()\n    const file = form.get('model-file') as File | null\n    const entry = (form.get('model-zip-entrypoint') as string) || undefined\n  \n    if (!file) {\n      return NextResponse.json({ error: 'Missing \"model-file\"' }, { status: 400 })\n    }\n  \n    const buffer = Buffer.from(await file.arrayBuffer())\n    const tmpPath = path.join(os.tmpdir(), file.name)\n    await fs.writeFile(tmpPath, buffer)\n  \n    const obj = await uploadObject(file.name, tmpPath)\n    await translateObject(urnify(obj.objectId!), entry)\n  \n    return NextResponse.json({ name: obj.objectKey, urn: urnify(obj.objectId!) })\n  }"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe;IAClB,MAAM,QAAQ,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD;IAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB,MAAM,GAAG,CAAC,CAAA,IAAK,CAAC;YAAE,MAAM,EAAE,SAAS;YAAE,KAAK,CAAA,GAAA,iHAAA,CAAA,SAAM,AAAD,EAAE,EAAE,QAAQ;QAAG,CAAC;AAErE;AAEO,eAAe,KAAK,OAAoB;IAC3C,MAAM,OAAO,MAAM,QAAQ,QAAQ;IACnC,MAAM,OAAO,KAAK,GAAG,CAAC;IACtB,MAAM,QAAQ,AAAC,KAAK,GAAG,CAAC,2BAAsC;IAE9D,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW;IACjD,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,MAAM,IAAI,KAAK,IAAI;IAChD,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,SAAS;IAE5B,MAAM,MAAM,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD,EAAE,KAAK,IAAI,EAAE;IAC1C,MAAM,CAAA,GAAA,iHAAA,CAAA,kBAAe,AAAD,EAAE,CAAA,GAAA,iHAAA,CAAA,SAAM,AAAD,EAAE,IAAI,QAAQ,GAAI;IAE7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,MAAM,IAAI,SAAS;QAAE,KAAK,CAAA,GAAA,iHAAA,CAAA,SAAM,AAAD,EAAE,IAAI,QAAQ;IAAG;AAC7E","debugId":null}}]
}