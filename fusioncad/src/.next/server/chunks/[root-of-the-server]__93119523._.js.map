{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/config.ts"],"sourcesContent":["import 'dotenv/config';\n\nconst {\n  APS_CLIENT_ID,\n  APS_CLIENT_SECRET,\n  APS_BUCKET: rawBucket,\n  NEXT_PUBLIC_PORT,\n} = process.env;\n\nif (!APS_CLIENT_ID || !APS_CLIENT_SECRET) {\n  console.error('MISSING APS CREDENTIALS');\n  process.exit(1);\n}\n\nexport const PORT = NEXT_PUBLIC_PORT || '3000';\nexport const APS_BUCKET = rawBucket || `${APS_CLIENT_ID.toLowerCase()}-projects`;\nexport const APS_CLIENT = {\n  id: APS_CLIENT_ID,\n  secret: APS_CLIENT_SECRET,\n};"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,EACJ,aAAa,EACb,iBAAiB,EACjB,YAAY,SAAS,EACrB,gBAAgB,EACjB,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,iBAAiB,CAAC,mBAAmB;IACxC,QAAQ,KAAK,CAAC;IACd,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,OAAO,oBAAoB;AACjC,MAAM,aAAa,aAAa,GAAG,cAAc,WAAW,GAAG,SAAS,CAAC;AACzE,MAAM,aAAa;IACxB,IAAI;IACJ,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/services/auth.ts"],"sourcesContent":["import 'dotenv/config'\nimport { AuthenticationClient, Scopes } from '@aps_sdk/authentication'\nimport { APS_CLIENT } from '../config'\nconst authClient = new AuthenticationClient();\n\n\nexport async function getViewerToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [Scopes.ViewablesRead]\n  );\n  return creds.access_token;\n}\n\nexport async function getInternalToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [\n      Scopes.DataRead,\n      Scopes.DataWrite,\n      Scopes.DataCreate,\n      Scopes.BucketRead,\n      Scopes.BucketCreate\n    ]\n  );\n  return creds.access_token;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;AACA,MAAM,aAAa,IAAI,sMAAA,CAAA,uBAAoB;AAGpC,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QAAC,+KAAA,CAAA,SAAM,CAAC,aAAa;KAAC;IAExB,OAAO,MAAM,YAAY;AAC3B;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QACE,+KAAA,CAAA,SAAM,CAAC,QAAQ;QACf,+KAAA,CAAA,SAAM,CAAC,SAAS;QAChB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,YAAY;KACpB;IAEH,OAAO,MAAM,YAAY;AAC3B","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/services/aps.ts"],"sourcesContent":["import 'dotenv/config'\nimport { APS_BUCKET } from '../config'\nimport { ModelDerivativeClient,View,OutputType } from '@aps_sdk/model-derivative'\nimport {\n  OssClient,\n  Region,\n  PolicyKey\n} from '@aps_sdk/oss'\nimport { getInternalToken } from './auth'\n\nconst BASE_URL = 'https://developer.api.autodesk.com'\n\nconst derivativeClient = new ModelDerivativeClient();\nconst ossClient = new OssClient();\n\nexport async function ensureBucketExists(bucketKey: string){\n    const token = await getInternalToken();\n    try{\n        await ossClient.getBucketDetails(bucketKey, {accessToken: token});\n    } catch(err:any) {\n        if(err.axiosError?.response?.status === 404){\n            await ossClient.createBucket(\n                Region.Us,\n                {bucketKey, policyKey: PolicyKey.Temporary},\n                {accessToken: token}\n            )\n        } else {\n            throw err\n        }\n    }\n}\n\nexport async function listObjects(){\n    await ensureBucketExists(APS_BUCKET);\n    const token = await getInternalToken();\n    let resp = await ossClient.getObjects(APS_BUCKET, {limit: 64, accessToken:token});\n    let items = resp.items;\n    while (resp.next){\n        const startAt = new URL(resp.next).searchParams.get(\"startAt\")!\n        resp = await ossClient.getObjects(APS_BUCKET, {limit: 64, accessToken:token});\n        items = items.concat(resp.items);\n    }\n    return items;\n}\n\nexport async function uploadObject(objectName: string, filePath: string) {\n    await ensureBucketExists(APS_BUCKET)\n    const token = await getInternalToken()\n    return await ossClient.uploadObject(APS_BUCKET, objectName, filePath, { accessToken: token })\n    }\n\n\nexport async function getManifest(urn: string) {\n    const token = await getInternalToken()\n    try {\n      return await derivativeClient.getManifest(urn, { accessToken: token })\n    } catch (err: any) {\n      if (err.axiosError?.response?.status === 404) return null\n      throw err\n    }\n  }\n  \n  export function urnify(id: string) {\n    return Buffer.from(id).toString('base64').replace(/=/g, '')\n  }\n\n/**\n * Kick off a SVF2 translation job.\n * @param urn  Base64 URN from `urnify(...)`\n * @param rootFilename optional entry‐point inside a zip\n */\nexport async function translateObject(\n  urn: string,\n  rootFilename?: string\n): Promise<void> {\n  const token = await getInternalToken()\n  const body: any = {\n    input: { urn }\n  }\n  if (rootFilename) body.input.rootFilename = rootFilename\n  body.output = {\n    formats: [{ type: 'svf2', views: ['2d', '3d'] }]\n  }\n\nconst res = await fetch(\n    `${BASE_URL}/modelderivative/v2/designdata/job`,\n    {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  )\n  if (!res.ok) {\n    throw new Error(`translateObject failed: ${res.statusText}`)\n  }\n}\n\n\nexport async function listModelViews(\n  urn: string\n): Promise<Array<{ name: string; role: string; guid: string }>> {\n  const token = await getInternalToken()\n  const res = await fetch(\n    `${BASE_URL}/modelderivative/v2/designdata/${urn}/metadata`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  )\n  if (!res.ok) {\n    throw new Error(`listModelViews failed: ${res.statusText}`)\n  }\n  const { data } = await res.json()\n  return data.metadata\n}\n\n/**\n * 2 & 4. Get object hierarchy (optional `objectId` for a sub‐tree)\n * Returns `{ result: 'success' }` if still processing, otherwise full tree\n */\nexport async function getObjectTree(\n  urn: string,\n  modelGuid: string,\n  objectId?: number\n): Promise<any> {\n  const token = await getInternalToken()\n  let url = `${BASE_URL}/modelderivative/v2/designdata/${urn}/metadata/${modelGuid}`\n  if (objectId != null) url += `?${objectId}`\n  const res = await fetch(url, {\n    headers: { Authorization: `Bearer ${token}` }\n  })\n  if (!res.ok) {\n    throw new Error(`getObjectTree failed: ${res.statusText}`)\n  }\n  return res.json()\n}\n\n/** 3. Fetch all properties for every object in the viewable */\nexport async function getAllProperties(\n  urn: string,\n  modelGuid: string\n): Promise<any> {\n  const token = await getInternalToken()\n  const res = await fetch(\n    `${BASE_URL}/modelderivative/v2/designdata/${urn}/metadata/${modelGuid}/properties`,\n    { headers: { Authorization: `Bearer ${token}` } }\n  )\n  if (!res.ok) {\n    throw new Error(`getAllProperties failed: ${res.statusText}`)\n  }\n  return res.json()\n}\n\n/**\n * 5. Query specific object IDs & property categories\n * @param objectIds     array of integer object IDs\n * @param propCategories array of category names (e.g. [\"Dimensions\"])\n */\nexport async function queryProperties(\n  urn: string,\n  modelGuid: string,\n  objectIds: number[],\n  propCategories: string[]\n): Promise<any> {\n  const token = await getInternalToken()\n  const body = {\n    objectIds,\n    propFilter: { categories: propCategories }\n  }\n  const res = await fetch(\n    `${BASE_URL}/modelderivative/v2/designdata/${urn}/metadata/${modelGuid}/properties:query`,\n    {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  )\n  if (!res.ok) {\n    throw new Error(`queryProperties failed: ${res.statusText}`)\n  }\n  return res.json()\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/app/api/models/%5Burn%5D/metadata/route.ts"],"sourcesContent":["// app/api/models/[urn]/metadata/route.ts\n\nimport { NextResponse } from 'next/server'\nimport {\n  getManifest,\n  listModelViews,\n  getObjectTree,\n  getAllProperties\n} from '@/services/aps'\n\nexport async function GET(\n  _req: Request,\n  context: { params: Promise<{ urn: string }> }\n) {\n  const { urn } = await context.params\n\n  try {\n    // 1) Fetch full manifest\n    const manifest = await getManifest(urn)\n    console.log('📝 Full Manifest:', JSON.stringify(manifest, null, 2))\n\n    // 2) If translation not complete, return 202\n    if (manifest.progress !== 'complete' || manifest.status !== 'success') {\n      return NextResponse.json(\n        { status: manifest.progress || manifest.status },\n        { status: 202 }\n      )\n    }\n\n    // 3) List all viewables\n    const views = await listModelViews(urn)\n    console.log('🗂️ Model Views:', JSON.stringify(views, null, 2))\n\n    const results: Record<string, any> = {}\n\n    // 4) For each viewable GUID, fetch tree & properties\n    for (const { guid, name, role } of views) {\n      // 4a) Object tree\n      let tree\n      do {\n        tree = await getObjectTree(urn, guid)\n      } while (!tree.data || !Array.isArray(tree.data.objects))\n      console.log(`🌲 Object Tree [${guid} - ${role}/${name}]:`, JSON.stringify(tree.data.objects, null, 2))\n\n      // 4b) All properties\n      let props\n      do {\n        props = await getAllProperties(urn, guid)\n      } while (!props.data || !Array.isArray(props.data.collection))\n      console.log(`📋 Properties [${guid} - ${role}/${name}]:`, JSON.stringify(props.data.collection, null, 2))\n\n      results[guid] = {\n        viewName: name,\n        viewRole: role,\n        objects: tree.data.objects,\n        properties: props.data.collection\n      }\n    }\n\n    // 5) Return manifest, views, and all metadata\n    return NextResponse.json({ manifest, views, results })\n  } catch (error: any) {\n    console.error('❌ Error extracting metadata for URN', urn, error)\n    return NextResponse.json({ error: error.message }, { status: 500 })\n  }\n}\n"],"names":[],"mappings":"AAAA,yCAAyC;;;;AAEzC;AACA;;;AAOO,eAAe,IACpB,IAAa,EACb,OAA6C;IAE7C,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,QAAQ,MAAM;IAEpC,IAAI;QACF,yBAAyB;QACzB,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD,EAAE;QACnC,QAAQ,GAAG,CAAC,qBAAqB,KAAK,SAAS,CAAC,UAAU,MAAM;QAEhE,6CAA6C;QAC7C,IAAI,SAAS,QAAQ,KAAK,cAAc,SAAS,MAAM,KAAK,WAAW;YACrE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,QAAQ,SAAS,QAAQ,IAAI,SAAS,MAAM;YAAC,GAC/C;gBAAE,QAAQ;YAAI;QAElB;QAEA,wBAAwB;QACxB,MAAM,QAAQ,MAAM,CAAA,GAAA,iHAAA,CAAA,iBAAc,AAAD,EAAE;QACnC,QAAQ,GAAG,CAAC,oBAAoB,KAAK,SAAS,CAAC,OAAO,MAAM;QAE5D,MAAM,UAA+B,CAAC;QAEtC,qDAAqD;QACrD,KAAK,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,MAAO;YACxC,kBAAkB;YAClB,IAAI;YACJ,GAAG;gBACD,OAAO,MAAM,CAAA,GAAA,iHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK;YAClC,QAAS,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;YACzD,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE,MAAM;YAEnG,qBAAqB;YACrB,IAAI;YACJ,GAAG;gBACD,QAAQ,MAAM,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE,KAAK;YACtC,QAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE;YAC9D,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,MAAM;YAEtG,OAAO,CAAC,KAAK,GAAG;gBACd,UAAU;gBACV,UAAU;gBACV,SAAS,KAAK,IAAI,CAAC,OAAO;gBAC1B,YAAY,MAAM,IAAI,CAAC,UAAU;YACnC;QACF;QAEA,8CAA8C;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;YAAU;YAAO;QAAQ;IACtD,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,uCAAuC,KAAK;QAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}}]
}