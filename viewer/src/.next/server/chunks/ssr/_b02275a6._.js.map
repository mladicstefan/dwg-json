{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/components/ModelSelector.tsx"],"sourcesContent":["import React from 'react'\nimport { Model } from './types'\n\ninterface Props {\n  busy: boolean\n  models: Model[]\n  selected: string\n  onSelect: (urn: string) => void\n}\n\nconst ModelSelector: React.FC<Props> = ({ busy, models, selected, onSelect }) => {\n  const handleChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const urn = e.target.value\n    onSelect(urn)\n    if (urn) {\n      try {\n        await fetch(`/api/models/${urn}/metadata/`, {\n          method: 'GET',\n          headers: { 'Accept': 'application/json' }\n        })\n      } catch (err) {\n        console.error('Failed to fetch metadata log for URN:', urn, err)\n      }\n    }\n  }\n\n  return (\n    <select\n      className=\"border rounded p-1 text-foreground\"\n      disabled={busy}\n      value={selected}\n      onChange={handleChange}\n    >\n      <option value=\"\">Select model</option>\n      {models.map(m => (\n        <option key={m.urn} value={m.urn}>\n          {m.name}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nexport default ModelSelector"],"names":[],"mappings":";;;;;AAUA,MAAM,gBAAiC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;IAC1E,MAAM,eAAe,OAAO;QAC1B,MAAM,MAAM,EAAE,MAAM,CAAC,KAAK;QAC1B,SAAS;QACT,IAAI,KAAK;YACP,IAAI;gBACF,MAAM,MAAM,CAAC,YAAY,EAAE,IAAI,UAAU,CAAC,EAAE;oBAC1C,QAAQ;oBACR,SAAS;wBAAE,UAAU;oBAAmB;gBAC1C;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,yCAAyC,KAAK;YAC9D;QACF;IACF;IAEA,qBACE,8OAAC;QACC,WAAU;QACV,UAAU;QACV,OAAO;QACP,UAAU;;0BAEV,8OAAC;gBAAO,OAAM;0BAAG;;;;;;YAChB,OAAO,GAAG,CAAC,CAAA,kBACV,8OAAC;oBAAmB,OAAO,EAAE,GAAG;8BAC7B,EAAE,IAAI;mBADI,EAAE,GAAG;;;;;;;;;;;AAM1B;uCAEe","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/components/UploadButton.tsx"],"sourcesContent":["import React, { ChangeEvent } from 'react'\n\ninterface Props {\n  busy: boolean\n  onUpload: (file: File) => void\n}\n\nconst UploadButton: React.FC<Props> = ({ busy, onUpload }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (file) onUpload(file)\n    e.target.value = ''\n  }\n  return (\n    <label className=\"cursor-pointer\">\n      <button className=\"bg-blue-600 text-white px-3 py-1 rounded\">\n        {busy ? 'Please wait...' : 'Upload'}\n      </button>\n      <input type=\"file\" className=\"hidden\" onChange={handleChange} />\n    </label>\n  )\n}\n\nexport default UploadButton"],"names":[],"mappings":";;;;;AAOA,MAAM,eAAgC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;IACvD,MAAM,eAAe,CAAC;QACpB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM,SAAS;QACnB,EAAE,MAAM,CAAC,KAAK,GAAG;IACnB;IACA,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;gBAAO,WAAU;0BACf,OAAO,mBAAmB;;;;;;0BAE7B,8OAAC;gBAAM,MAAK;gBAAO,WAAU;gBAAS,UAAU;;;;;;;;;;;;AAGtD;uCAEe","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/components/Header.tsx"],"sourcesContent":["import React from 'react'\nimport ModelSelector from './ModelSelector'\nimport UploadButton from './UploadButton'\nimport { Model } from './types'\ninterface HeaderProps {\n  busy: boolean\n  models: Model[]\n  selected: string\n  onSelect: (urn: string) => void\n  onUpload: (file: File) => void\n}\n\nconst Header: React.FC<HeaderProps> = ({ busy, models, selected, onSelect, onUpload }) => (\n  <div className=\"sticky top-0 z-20 flex items-center bg-gray-100 p-2 space-x-2\">\n    <img className=\"h-8\" src=\"https://cdn.autodesk.io/logo/black/stacked.png\" alt=\"APS\" />\n    <span className=\"flex-1 text-lg font-bold text-foreground\">Simple Viewer</span>\n    <ModelSelector busy={busy} models={models} selected={selected} onSelect={onSelect} />\n    <UploadButton busy={busy} onUpload={onUpload} />\n  </div>\n)\n\nexport default Header"],"names":[],"mappings":";;;;AACA;AACA;;;;AAUA,MAAM,SAAgC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,iBACnF,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;gBAAM,KAAI;gBAAiD,KAAI;;;;;;0BAC9E,8OAAC;gBAAK,WAAU;0BAA2C;;;;;;0BAC3D,8OAAC,4HAAA,CAAA,UAAa;gBAAC,MAAM;gBAAM,QAAQ;gBAAQ,UAAU;gBAAU,UAAU;;;;;;0BACzE,8OAAC,2HAAA,CAAA,UAAY;gBAAC,MAAM;gBAAM,UAAU;;;;;;;;;;;;uCAIzB","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/components/StatusOverlay.tsx"],"sourcesContent":["import React from 'react'\n\ninterface Props { message: string }\n\nconst StatusOverlay: React.FC<Props> = ({ message }) => (\n  <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n    <div className=\"bg-white p-4 rounded text-foreground\" dangerouslySetInnerHTML={{ __html: message }} />\n  </div>\n)\n\nexport default StatusOverlay"],"names":[],"mappings":";;;;;AAIA,MAAM,gBAAiC,CAAC,EAAE,OAAO,EAAE,iBACjD,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;YAAuC,yBAAyB;gBAAE,QAAQ;YAAQ;;;;;;;;;;;uCAItF","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/app/%28public%29/%28homepage%29/page.tsx"],"sourcesContent":["'use client'\n\nimport Header from '@/components/Header'\nimport StatusOverlay from '@/components/StatusOverlay'\nimport React, { useEffect, useState, useRef, ChangeEvent } from 'react'\nimport { Model } from '@/components/types'\n\ndeclare global { interface Window { Autodesk: any } }\n\nexport default function HomePage() {\n  const [models, setModels] = useState<Model[]>([])\n  const [selected, setSelected] = useState<string>('')\n  const [busy, setBusy] = useState<boolean>(false)\n  const [message, setMessage] = useState<string | null>(null)\n  const viewerRef = useRef<HTMLDivElement>(null)\n  const viewerInstance = useRef<any>(null)\n\n  useEffect(() => {\n    const script = document.createElement('script')\n    script.src = 'https://developer.api.autodesk.com/modelderivative/v2/viewers/7.*/viewer3D.js'\n    script.onload = () => {\n      if (!viewerRef.current) return\n      const getAccessToken = (cb: (token: string, expires: number) => void) => {\n        fetch('/api/auth/token')\n          .then(r => r.json())\n          .then((d: { access_token: string; expires_in: number }) => cb(d.access_token, d.expires_in))\n          .catch(console.error)\n      }\n      window.Autodesk.Viewing.Initializer(\n        { env: 'AutodeskProduction', getAccessToken },\n        () => {\n          const v = new window.Autodesk.Viewing.GuiViewer3D(viewerRef.current!, {})\n          v.start()\n          viewerInstance.current = v\n        }\n      )\n    }\n    document.head.appendChild(script)\n  }, [])\n\n  useEffect(() => {\n    fetch('/api/models')\n      .then(r => r.json())\n      .then(setModels)\n      .catch(console.error)\n  }, [])\n\n  // Handle uploads\n  const handleUpload = async (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (!file) return\n    const form = new FormData()\n    form.append('model-file', file)\n    if (file.name.endsWith('.zip')) {\n      const entry = prompt('Main file in ZIP?')!\n      form.append('model-zip-entrypoint', entry)\n    }\n    setBusy(true)\n    setMessage(`Uploading ${file.name}...`)\n    await fetch('/api/models', { method: 'POST', body: form })\n    const list = await fetch('/api/models').then(r => r.json())\n    setModels(list)\n    setBusy(false)\n    setSelected(file.name)\n  }\n\n  // Poll translation status and load model\n  useEffect(() => {\n    let timer: number\n    const check = async () => {\n      if (!viewerInstance.current || !selected) return\n      setMessage('Checking translation...')\n      const res = await fetch(`/api/models/${selected}/status`)\n      const st = await res.json()\n      if (st.status === 'inprogress') {\n        setMessage(`Translating (${st.progress})...`)\n        timer = window.setTimeout(check, 5000)\n      } else if (st.status === 'failed') {\n        setMessage('Translation failed')\n      } else {\n        setMessage(null)\n        viewerInstance.current.setLightPreset(0)\n        window.Autodesk.Viewing.Document.load(\n          'urn:' + selected,\n          (doc: any) =>\n            viewerInstance.current.loadDocumentNode(\n              doc,\n              doc.getRoot().getDefaultGeometry()\n            ),\n          (_code: number, msg: string) => console.error(msg)\n        )\n      }\n    }\n    check()\n    return () => clearTimeout(timer)\n  }, [selected])\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <Header\n        busy={busy}\n        models={models}\n        selected={selected}\n        onSelect={setSelected}\n        onUpload={handleUpload as any}\n      />\n      {message && <StatusOverlay message={message} />}\n      <div ref={viewerRef} className=\"flex-1 relative\" />\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}