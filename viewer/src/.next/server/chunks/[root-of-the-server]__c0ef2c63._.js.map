{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/config.ts"],"sourcesContent":["import 'dotenv/config';\n\nconst {\n  APS_CLIENT_ID,\n  APS_CLIENT_SECRET,\n  APS_BUCKET: rawBucket,\n  NEXT_PUBLIC_PORT,\n} = process.env;\n\nif (!APS_CLIENT_ID || !APS_CLIENT_SECRET) {\n  console.error('MISSING APS CREDENTIALS');\n  process.exit(1);\n}\n\nexport const PORT = NEXT_PUBLIC_PORT || '3000';\nexport const APS_BUCKET = rawBucket || `${APS_CLIENT_ID.toLowerCase()}-projects`;\nexport const APS_CLIENT = {\n  id: APS_CLIENT_ID,\n  secret: APS_CLIENT_SECRET,\n};"],"names":[],"mappings":";;;;;;;;;;;AAEA,MAAM,EACJ,aAAa,EACb,iBAAiB,EACjB,YAAY,SAAS,EACrB,gBAAgB,EACjB,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,iBAAiB,CAAC,mBAAmB;IACxC,QAAQ,KAAK,CAAC;IACd,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,OAAO,oBAAoB;AACjC,MAAM,aAAa,aAAa,GAAG,cAAc,WAAW,GAAG,SAAS,CAAC;AACzE,MAAM,aAAa;IACxB,IAAI;IACJ,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/services/auth.ts"],"sourcesContent":["import 'dotenv/config'\nimport { AuthenticationClient, Scopes } from '@aps_sdk/authentication'\nimport { APS_CLIENT } from '../config'\nconst authClient = new AuthenticationClient();\n\n\nexport async function getViewerToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [Scopes.ViewablesRead]\n  );\n  return creds.access_token;\n}\n\nexport async function getInternalToken(): Promise<string> {\n  const creds = await authClient.getTwoLeggedToken(\n    APS_CLIENT.id,\n    APS_CLIENT.secret,\n    [\n      Scopes.DataRead,\n      Scopes.DataWrite,\n      Scopes.DataCreate,\n      Scopes.BucketRead,\n      Scopes.BucketCreate\n    ]\n  );\n  return creds.access_token;\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;AACA;AAAA;AACA;;;;AACA,MAAM,aAAa,IAAI,sMAAA,CAAA,uBAAoB;AAGpC,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QAAC,+KAAA,CAAA,SAAM,CAAC,aAAa;KAAC;IAExB,OAAO,MAAM,YAAY;AAC3B;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,WAAW,iBAAiB,CAC9C,wGAAA,CAAA,aAAU,CAAC,EAAE,EACb,wGAAA,CAAA,aAAU,CAAC,MAAM,EACjB;QACE,+KAAA,CAAA,SAAM,CAAC,QAAQ;QACf,+KAAA,CAAA,SAAM,CAAC,SAAS;QAChB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,UAAU;QACjB,+KAAA,CAAA,SAAM,CAAC,YAAY;KACpB;IAEH,OAAO,MAAM,YAAY;AAC3B","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/djamla/Documents/code/cadalgo/fusioncad/src/app/api/auth/token/route.ts"],"sourcesContent":["\nimport { getViewerToken } from \"@/services/auth\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET(){\n    try{\n        const access_token = await getViewerToken();\n        return NextResponse.json({access_token});\n    }catch (err){\n        console.error('APS auth error:', err)\n        return NextResponse.json(\n            { error: 'Could not fetch APS viewer token' },\n            { status: 500 },\n        )\n    }\n\n}"],"names":[],"mappings":";;;AACA;AACA;;;AAEO,eAAe;IAClB,IAAG;QACC,MAAM,eAAe,MAAM,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC;QAAY;IAC1C,EAAC,OAAO,KAAI;QACR,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAmC,GAC5C;YAAE,QAAQ;QAAI;IAEtB;AAEJ","debugId":null}}]
}